# miu - js
## Меню
1. [miu - js](#miu - js)
2. [Быстрый старт](#Быстрый старт)
3. [Асинхронный тест](#Асинхронный тест)


## Быстрый старт

miu считает любой текст примыкающий к началу строки текстом статьи, а с отступом - кодом.


```js
var abs;
abs = 16;	// 16
	
1+5 // 6
1+5 //# 1+5
" 26\n" // \s26\n
{a: [2], b: 3, c: 4} //# {a: [2], b: 3, c: 4}


// ну а это просто комментарий, так как перед ним ничего нет!

```

Львиная доля тестов приходится как раз на умное сравнение (обратите внимание на последний тест). Однако иногда мне бы хотелось сказать "больше" или "меньше".


```js
Math.pow(2, 3) //< 10
8 //!= 3
"8" //== 8
"test" //~ es.$
{} //~ ^\[object Object\]$
{} //!~ ^\[Object
{} //#~ /^\[Object/i
123456 //startswith 123
123456 //endswith 456

```

Если тест бросает исключение, то его можно протестировать так:


```js
throw new Error("myexception") //@ startswith myexception
throw new Error("myexception") //#@ !~ /чего\?/
throw new Error("myexception") //@ !~ чего\?


```

Если необходимо захватить несколько строк на которых должно произойти исключение, то используем `try...catch`:


```js
try {
	throw new Error("abc");
} catch(e) {
	e.message;			// abc
	e+"";				// Error: abc
	e					//# new Error("abc")
}

```

### Асинхронный тест


```js
setTimeout(function() {
	5 // 5
}, 100);

```

